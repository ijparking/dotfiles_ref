""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vimrc
" " Author: YunSeop Song

"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Plugin Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin()

Plug 'benmills/vimux'
Plug 'pitluga/vimux-nose-test'

Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'kien/ctrlp.vim'
Plug 'vim-scripts/ctrlp-z'

Plug 'Valloric/YouCompleteMe'

Plug 'flazz/vim-colorschemes'

Plug 'rking/ag.vim'
Plug 'SirVer/ultisnips'

Plug 'airblade/vim-gitgutter'

Plug 'mhinz/vim-startify'

call plug#end()


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   General Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Sets history line
set history=500

" Mapping <leader> => ,
let mapleader=","

" Show current position at bottom-right
set ruler

set lazyredraw

set magic

" Show matching brackets when text indicator is over them
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=2

" Show line number
set number

" Set line number relative
set relativenumber

set bs=indent,eol,start

set noimd


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Search Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Ignore case when searching
set ignorecase

" Be smart when searching
set smartcase

" Highlight search last result
set hlsearch

" Move cursor when searching
set incsearch


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Color Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Syntax Enable
syntax on

" Use color scheme 'onedark'
colorscheme onedark
hi Visual term=reverse cterm=reverse guifg=#000000 guibg=#FFFFFF gui=none


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Indent Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" tab == 4 space
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Using tab like 4 space
set expandtab
set smarttab

" Auto Indent
"set ai
" Smart Indent
set si


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Key Mapping
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ,vi =>  Show edit tab .vimrc
nnoremap <leader>vi :tabe ~/.vimrc<CR>

" ,src => Reload .vimrc
nnoremap <leader>src :source ~/.vimrc<CR>

nnoremap <leader>b :set wrap!<CR>

" ,q => Quit
map <leader>q <ESC><ESC>:q<CR>


" F2 => Save File
imap <F2> <ESC><ESC>:w<CR>
map <F2> <ESC><ESC>:w<CR>

" ,w => Save File
imap <leader>w <ESC><ESC>:w<CR>
map <leader>w <ESC><ESC>:w<CR>

" F3 => Toggle line number
map <F3> <ESC>:set nu! relativenumber!<CR>

" jk => esc, Escape insert mode
inoremap jk <ESC>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Moving tab Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-h> <C-W>h
nmap <C-l> <C-W>l


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   copy to clipboard Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" <leader>y, <leader>p : yank to or paste from the system clipboard
noremap <leader>y "*y
noremap <leader>p "*p
noremap <leader>co ggVG*y

set clipboard=unnamed


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"                       Setting for Plugins
"                       
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   NERDTree Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" F9 => Toggle NERDTree
map <F9> :NERDTreeToggle<CR>

" Setting NERDTree Ignore Files
let NERDTreeIgnore=['\.pyc$', '__pycache__']

let g:nerdtree_tabs_open_on_console_startup = 1
let g:nerdtree_tabs_open_on_gui_startup = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   nosetest Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let test#strategy="vimux"

nmap <silent> <leader>t :RunNoseTestFocused<CR>
nmap <silent> <leader>T :RunNoseTestBuffer<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   YouCompleteMe Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
let g:ycm_use_ultisnips_completer = 1 " Default 1, just ensure
let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
let g:ycm_complete_in_comments = 1 " Completion in comments
let g:ycm_complete_in_strings = 1 " Completion in string

let g:ycm_key_list_select_completion = ['<C-j>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-k>', '<Up>']
set completeopt-=preview

nmap <leader>g :YcmCompleter GoTo<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   ag.vim  Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" <leader>ag : Ag (search file contents)
nnoremap <leader>ag :Ag! -i ""<Left>

" Search word which cursor on
nnoremap <leader>aw :Ag<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   unltisnips Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
" UltiSnips {{
let g:UltiSnipsExpandTrigger="<Tab>"
let g:UltiSnipsJumpForwardTrigger="<c-h>"
let g:UltiSnipsJumpBackwardTrigger="<c-l>"
" }}}

" If you want :UltiSnipsEdit to split your window.
" let g:UltiSnipsEditSplit="vertical"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   airline Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:airline_theme='simple'

let g:airline_powerline_fonts = 1

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#show_tabs = 1

" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" enable/disable fugitive/lawrencium integration
let g:airline#extensions#branch#enabled = 1

" enable/disable showing a summary of changed hunks under source control.
let g:airline#extensions#hunks#enabled = 1

" enable/disable showing only non-zero hunks.
let g:airline#extensions#hunks#non_zero_only = 1

let g:airline#extensions#whitespace#enabled = 0

let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

let g:airline#extensions#tabline#buffer_idx_mode = 1
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>~ <Plug>AirlineSelectPrevTab
nmap <leader>` <Plug>AirlineSelectNextTab
nmap <leader>bq :bp <BAR> bd #<CR>

let g:airline#extensions#tabline#excludes = [".vimrc"]

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   ctrlp Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll|pyc)$',
  \ }


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   lint Setting with vimux plugin
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:lint_plugin="pylint"
nmap <leader>l :VimuxRunCommand(g:lint_plugin . " " .  expand("%"))<CR>


nmap <leader>gs :VimuxPromptCommand("git status -bs")<CR><CR>
nmap <leader>gd :VimuxPromptCommand("git diff")<CR><CR>
